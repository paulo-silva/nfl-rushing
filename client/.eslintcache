[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/reportWebVitals.js":"3","/app/src/api.js":"4","/app/src/components/Players.js":"5","/app/src/components/Table.js":"6"},{"size":500,"mtime":1610155909800,"results":"7","hashOfConfig":"8"},{"size":214,"mtime":1610322030540,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610155909800,"results":"10","hashOfConfig":"8"},{"size":1201,"mtime":1610389265600,"results":"11","hashOfConfig":"8"},{"size":3784,"mtime":1610373158010,"results":"12","hashOfConfig":"8"},{"size":1050,"mtime":1610365232150,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"8r7mmk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/app/src/index.js",[],["28","29"],"/app/src/App.js",[],"/app/src/reportWebVitals.js",[],"/app/src/api.js",[],"/app/src/components/Players.js",["30","31","32","33"],"import { Component } from \"react\";\nimport download from 'downloadjs';\nimport { filterPlayersByName, loadPlayers, generatePlayersCSV } from \"../api\";\nimport Table from \"./Table\";\nimport './Players.css';\n\nclass Players extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      offset: 0,\n      limit: 30,\n      sort_by: \"\",\n      name: \"\",\n      sort_dir: \"asc\",\n      players: [],\n      lastPage: false\n    };\n  }\n\n  componentDidMount() {\n    loadPlayers(this.state, players => this.setState({ players }))\n  }\n\n  playersHeader() {\n    return [\n      \"Player\",\n      \"Team\",\n      \"Pos\",\n      \"Att/G\",\n      \"Att\",\n      \"Yrds\",\n      \"Avg\",\n      \"Yds/G\",\n      \"TD\",\n      \"Lng\",\n      \"1st\",\n      \"1st%\",\n      \"20+\",\n      \"40+\",\n      \"FUM\"\n    ];\n  }\n\n  sortableColumns() {\n    return [\"Lng\", \"TD\", \"Yrds\"]\n  }\n\n  buildPlayersRows(players) {\n    return players.map(player => [\n      player.name,\n      player.team,\n      player.position,\n      player.attempts_avg,\n      player.attempts,\n      player.total_yards,\n      player.avg_yards_per_attempts,\n      player.yards_per_game,\n      player.total_touchdowns,\n      player.longest_rush,\n      player.first_down,\n      player.first_down_ratio,\n      player.twenty_yards,\n      player.fourty_yards,\n      player.fumbles\n    ])\n  }\n\n  handleHeaderClick(event) {\n    const clickedColumn = event.target.getAttribute('name');\n\n    this.sortPlayersBy(clickedColumn)\n  }\n\n  sortPlayersBy(column) {\n    const columnToField = {\n      Lng: \"longest_rush\",\n      TD: \"total_touchdowns\",\n      Yrds: \"total_yards\"\n    }\n    const currentSortDir = this.state.sort_dir\n    const newSortDir = currentSortDir == 'asc' ? 'desc' : 'asc'\n\n    if (columnToField[column]) {\n      this.setState({\n        sort_by: columnToField[column],\n        sort_dir: this.state.sort_by == columnToField[column] ? newSortDir : 'asc'\n      }, () => loadPlayers(this.state, players => this.setState({ players })))\n    }\n  }\n\n  handleNameFilterChange(event) {\n    const name = event.target.value\n\n    this.setState({ name }, () => filterPlayersByName(this.state.name, players => this.setState({ players })))\n  }\n\n  previousPage() { this.handlePagination(\"previous\") }\n  nextPage() { this.handlePagination(\"next\") }\n\n  handlePagination(direction) {\n    const { offset, limit } = this.state\n    const newOffset = direction == \"previous\" ? offset - limit : offset + limit\n\n    this.setState({ offset: newOffset }, () => {\n      loadPlayers(this.state, players =>\n        this.setState({ players: players, lastPage: players.length == 0 })\n      )\n    })\n  }\n\n  generateCSV() {\n    generatePlayersCSV(this.state, result => download(result, 'players.csv', 'text/csv'));\n  }\n\n  render() {\n    return (\n      <div className=\"Players\">\n        <div className=\"PlayersActions\">\n          <input\n            className=\"PlayersFilter\"\n            onChange={this.handleNameFilterChange.bind(this)}\n            placeholder=\"Filter by Player Name\"\n          />\n\n          <div className=\"PlayersPaginationControl\">\n            <button onClick={this.generateCSV.bind(this)} className=\"Button ButtonGreen\">Download as CSV</button>\n            <button {...this.state.offset === 0 && { disabled: true }} onClick={this.previousPage.bind(this)} class=\"Button ButtonBlue\">Previous Page</button>\n            <button {...this.state.lastPage && { disabled: true }} onClick={this.nextPage.bind(this)} class=\"Button ButtonBlue\">Next Page</button>\n          </div>\n        </div>\n        <Table\n          onHeaderClick={this.handleHeaderClick.bind(this)}\n          sortableColumns={this.sortableColumns()}\n          header={this.playersHeader()}\n          rows={this.buildPlayersRows(this.state.players)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Players\n","/app/src/components/Table.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":83,"column":39,"nodeType":"40","messageId":"41","endLine":83,"endColumn":41},{"ruleId":"38","severity":1,"message":"39","line":88,"column":38,"nodeType":"40","messageId":"41","endLine":88,"endColumn":40},{"ruleId":"38","severity":1,"message":"39","line":104,"column":33,"nodeType":"40","messageId":"41","endLine":104,"endColumn":35},{"ruleId":"38","severity":1,"message":"39","line":108,"column":68,"nodeType":"40","messageId":"41","endLine":108,"endColumn":70},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]